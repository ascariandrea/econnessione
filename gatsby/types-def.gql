# Articles
# interface Article @nodeInterface{
#   id: ID!
#   uuid: String
#   draft: Boolean!
#   title: String!
#   path: String!
#   date: Date!
#   links: [String!]
# }

type ArticleFrontmatter implements Node {
  uuid: String
  draft: Boolean!
  title: String!
  path: String!
  date: Date!
  links: [String!]
}

# type ArticleMarkdownRemark implements Node {
#   frontmatter: Article!
#   htmlAst: JSON!
# }

# # type ArticleFile implements Node {
# #   sourceInstanceName: String
# #   relativeDirectory: String
# #   childMarkdownRemark: ArticleMarkdownRemark!
# # }

# Actors
# interface Actor @nodeInterface {
#   id: ID!
#   uuid: String!
#   fullName: String
#   username: String
#   avatar: File!
#   color: String
#   date: Date!
# }

type ActorFrontmatter implements Node {
  uuid: String!
  fullName: String
  username: String
  avatar: File
  color: String
  date: Date!
}

# type ActorMarkdownRemark implements Node {
#   frontmatter: Actor!
#   htmlAst: JSON!
# }

# # type ActorFile implements Node @dontInfer {
# #   sourceInstanceName: String
# #   relativeDirectory: String
# #   childMarkdownRemark: ActorMarkdownRemark!
# # }

type GroupFrontmatter implements Node @dontInfer {
  id: ID!
  uuid: String!
  name: String!
  avatar: File!
  members: [String!]
  date: Date!
  color: String
}

# type GroupMarkdownRemark implements Node {
#   frontmatter: Group!
#   htmlAst: JSON
# }

# # type GroupFile implements Node {
# #   sourceInstanceName: String
# #   relativeDirectory: String
# #   childMarkdownRemark: GroupMarkdownRemark!
# # }

type PageFrontmatter implements Node @dontInfer {
  title: String!
  path: String!
  date: Date!
  slug: String!
}

# type PageMarkdownRemark implements Node {
#   frontmatter: Page!
#   htmlAst: JSON!
# }

# Topics
type TopicFrontmatter implements Node @dontInfer {
  uuid: String!
  slug: String!
  label: String!
  date: Date!
  color: String
}

# type TopicMarkdownRemark implements Node {
#   frontmatter: Topic!
#   htmlAst: JSON!
# }

# # type TopicFile implements Node @dontInfer {
# #   sourceInstanceName: String
# #   relativeDirectory: String
# #   childMarkdownRemark: TopicMarkdownRemark!
# # }

# Events
type EventFrontmatter implements Node @dontInfer {
  uuid: String!
  title: String!
  date: Date!
  type: String
  groups: [String]
  topics: [String]
  actors: [String]
  links: [String]
}

# type EventMarkdownRemark implements Node {
#   frontmatter: Event!
#   htmlAst: JSON
# }

# # type EventFile implements Node {
# #   sourceInstanceName: String
# #   relativeDirectory: String
# #   childMarkdownRemark: EventMarkdownRemark!
# # }

type MarkdownRemarkFrontmatter {
  uuid: String!
}

type MarkdownRemark implements Node {
  frontmatter: Frontmatter
}


