name: Pull Request

on:
  push:
    branches:
      - release/alpha
  pull_request:
    branches:
      - release/alpha
      - master
    paths:
      - "packages/**"
      - "services/api/**"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - uses: actions/cache@v2
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Install modules
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/@econnessione/**/node_modules
            services/**/node_modules
          key: ${{ runner.os }}-yarn-node_modules

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/@econnessione/**/node_modules
            services/**/node_modules
          key: ${{ runner.os }}-yarn-node_modules
          restore-keys: |
            ${{ runner.os }}-yarn-node_modules

      - name: Lint code
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-yarn-node_modules
          path: |
            node_modules
            packages/@econnessione/**/node_modules
            services/**/node_modules
          restore-keys: |
            ${{ runner.os }}-yarn-node_modules

      - name: Build core
        run: yarn workspace @econnessione/core build

      - name: Build shared
        run: yarn workspace @econnessione/shared build

      - name: Build api
        run: yarn workspace api build

      - name: Build web
        run: DISABLE_ESLINT_PLUGIN=true yarn workspace web build

      - name: Build admin-web
        run: DISABLE_ESLINT_PLUGIN=true yarn workspace admin-web build

      - name: Build storybook
        run: yarn workspace storybook build

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            packages/**/lib
            services/**/build

  tests-spec:
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/@econnessione/**/node_modules
            services/**/node_modules
          key: ${{ runner.os }}-yarn-node_modules
          restore-keys: |
            ${{ runner.os }}-yarn-node_modules

      - name: Install deps
        run: yarn

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Run tests SPEC
        run: yarn test:spec

  tests-e2e:
    runs-on: ubuntu-latest
    needs: [lint, build]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: econnessione
          POSTGRES_PASSWORD: econnessione-password
          POSTGRES_DB: econnessione-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 9432:5432
    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/@econnessione/**/node_modules
            services/**/node_modules
          key: ${{ runner.os }}-yarn-node_modules
          restore-keys: |
            ${{ runner.os }}-yarn-node_modules

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Install deps
        run: yarn

      - name: Run tests E2E
        run: yarn test:e2e --ci --forceExit
